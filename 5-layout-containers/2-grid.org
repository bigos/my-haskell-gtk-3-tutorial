* Grid

** Grid

*** Create a project and edit the cabal file
Following the usual procedure crate new project ~grid-example~, cd into it and
edit the cabal file.

*** Edit the source
#+BEGIN_SRC haskell
  {-# LANGUAGE OverloadedStrings #-}

  module Main where

  import qualified GI.Gtk as GI (init,
                                 main)
  import GI.Gtk (buttonNew,
                 containerAdd,
                 gridAttach,
                 gridAttachNextTo,
                 mainQuit,
                 onWidgetDestroy,
                 setButtonLabel,
                 widgetShowAll,
                 windowNew,
                 windowSetTitle,
                 gridNew)

  import GI.Gtk.Enums
         (WindowType(..), PositionType(..))

  main :: IO ()
  main = do
    _ <- GI.init Nothing

    win <- windowNew WindowTypeToplevel
    windowSetTitle win "Grid example"

    grid <- gridNew
    containerAdd win grid

    button1 <- buttonNew
    setButtonLabel button1 "Button 1"

    button2 <- buttonNew
    setButtonLabel button2 "Button 2"

    button3 <- buttonNew
    setButtonLabel button3 "Button 3"

    button4 <- buttonNew
    setButtonLabel button4 "Button 4"

    button5 <- buttonNew
    setButtonLabel button5 "Button 5"

    button6 <- buttonNew
    setButtonLabel button6 "Button 6"

    containerAdd grid button1
    gridAttach grid button2 1 0 2 1
    gridAttachNextTo grid button3 (Just button1) PositionTypeBottom 1 2
    gridAttachNextTo grid button4 (Just button3) PositionTypeRight 2 1
    gridAttach grid button5 1 2 1 1
    gridAttachNextTo grid button6 (Just button5) PositionTypeRight 1 1

    _ <- onWidgetDestroy win mainQuit
    widgetShowAll win
    GI.main
#+END_SRC

*** Compile and run
Compile and run ~grid-example~ the same way you did in previous examples.
