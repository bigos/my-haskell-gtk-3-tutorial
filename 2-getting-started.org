* Getting Started
Following the Python tutorial I will try to achieve the same. But at this point
I will have to start a folder structure for my examples.

** Create a directory
Let's create a simple project and call it simple-example and cd into it.
#+BEGIN_EXAMPLE
stack new simple-example simple
cd ./simple-example
#+END_EXAMPLE

** cabal file
Edit ~sinple-example.cabal~ file and modify ~build-depends~ section to look
like this:
#+BEGIN_EXAMPLE
  build-depends:       base >= 4.7 && < 5
                     , gi-gtk >= 3.0
                     , haskell-gi-base -any
#+END_EXAMPLE

** Source file
Edit ./src/Main.hs and make it look like following:
#+BEGIN_SRC haskell
  {-# LANGUAGE OverloadedStrings #-}

  module Main where

  import qualified GI.Gtk as GI (init,
                                 main)
  import GI.Gtk (mainQuit,
                 onWidgetDestroy,
                 windowNew,
                 widgetShowAll)
  import GI.Gtk.Enums
         (WindowType(..))

  main :: IO ()
  main = do
    _ <- GI.init Nothing

    win <- windowNew WindowTypeToplevel
    _ <- onWidgetDestroy win mainQuit
    widgetShowAll win
    GI.main

#+END_SRC

** Compile and run
When you run you OS version of ~stack install~ for the first time, it will take
long time to complete. It's over 20 minutes on my machine. It is quick after that.

*** Linux version
#+BEGIN_EXAMPLE
stack install
stack exec simple-example
#+END_EXAMPLE

*** Windows version
#+BEGIN_EXAMPLE
stack install --system-ghc
simple-example.exe
#+END_EXAMPLE

** Translation of Gtk symbols
When Python example contains something like ~show_all~, then on the Haskell side
you need to look for something like showAll.

Go to the documentation
https://hackage.haskell.org/package/gi-gtk-3.0.18/docs/doc-index-All.html
and search all index.

Among other potential candidates ~widgetShowAll~ is found. The method operates
on a widget so it makes sense. Clicking on the link
to the right of it will reveal more information.

I had to replace Python's 'delete-event' with onWidgetDestroy, because it's type
better suited my needs. But it you want [[https://hackage.haskell.org/package/gi-gtk-3.0.18/docs/GI-Gtk-Objects-Widget.html#v:onWidgetDeleteEvent][onWidgetDeleteEvent]] is also available.
